composer
composer create-project laravel/laravel laravel 创建一个laravel
composer create-project laravel/laravel=5.0.* --prefer-dist
composer require doctrine/dbal 引入一个能够删除数据库字段的包
====================================================================================================================================
php artisan 整理
php artisan php artisan make:controller SitesController --resource 创建一个action --resource同时初始化基本函数（可以不使用）
//migration 数据库版本控制
php artisan migrate 将migration实例化为数据库表
php artisan migrate:rollback 撤销上一步migrate动作
php artisan make:migration create_articles_table --create=articles (只是创建一个数据库文件,并没有同步到sql里),如果一个数据库文件没有其他字段将无正常实例化
php artisan make:migration add_intro_column_to_articles       --table=articles  指定表进行操作（删除或者增加字段）
//model控制
php artisan make:model Article -m    -m命令可以同时生成migrate文件
php artisan tinker  命令行执行界面(DOS下执行PHP代码)
php artisan make:request 新建一个提交验证（）
php artisan route:list 显示路由列表（若路由路径不存在会报错，因此使用前先检查路由是否正确）
cls  清屏   -windows下命令
//laravel 创建新的文件(request 验证)
php artisan make:request articlesRequset
//生成测试数据文件 /database/seeds/...
php artisan make:seeder ArticleSeeder
//填充测试数据
php artisan db:seed 
//生成新的APP_KEY php artisan key:
php artisan migrate:rollback 会执行down方法 migrate只会执行

php artisan passport:install  auth2.0 生成加密的key
====================================================================================================================================
Laravel 总结
laravel 提示_token错误  检查model内的$fillable填充字段
设置cache : cache(['name'=>'zxj']) 类似  session(['name'='storm']) 调用 session('name')  cache('name')
laravel 5.3 app目录发生改变 ，移除多个文件夹
laravel时区设置 在config文件夹下 app.php 配置内的timezone修改为'Asia/shanghai'
laravel set属性Attribute 设置属性默认值（在model中） scope方法名 设置数据库查询方法（封装）  二者都遵循驼峰规范

http\request:提交规则验证=》php artisan make:request 命令
//curd数据库操作

simplepaginate(5):laravel分页操作。简单模式：分页只显示上一页和下一页，不显示其他页
paginate:详细分页，显示上一页和下一页，同时显示其他页面
public 目录下注意文件夹名称的唯一性（代码中action以及function不要和文件夹重名）

//migration
dropColumn($column):删除指定的列名称

up 是创建数据库 create

down 是销毁 drop
// foreach 的loop调用

index：从1开始的循环索引，1意味着是第一个条目。
remaining：循环还有多少个条目，比如当前是3个中的第一个，那么会返回2；
count：循环总条目数
first：是否是第一个
last：是否是最后一个
depth：循环的层级
parent：如果循环位于另一个@foreach中，返回父循环引用，否则返回null
//-token验证
  {!! csrf_field() !!}放到form里
//连接处理
url('controller'，$article->id) 拼接参数
action('ArticleController@show',[$article->id])只要值，不要键

//数据库查询数据倒叙排列、
latest()->get();
//==================================================================================================================================
phpstorm 

格式化代码 control + alt + L

查找文件 control+shift+N

通用查询 control+alt+s  其中live template是设置本地快捷关联

撤销 ctrl+Z

反撤销 ctrl+shift+Z
//=========================================================================
{{解析变量}}{{解析变量同时转义}}    @{{+@符号可以禁止laravel对括号里的内容进行解析}}

模版变量调用 ->with('name',$name)   view('xxxx',$data(array)):会直接将数组的值转换出来  compact('name',''','','')不会转换数组或其他类型
view()->share('title', $this->title ); 可以将controller变量共享到整个类中

自定义常量
getenv('string')
获取env文件中的参数
env文件中可直接设置参数
若Route中有Route::get('home/test', 'HomeController@index')->name('test');
①视图中的href跳转
一、<a href="{{ url('home/test') }}">
区别：最方便，但路由改变时就又要修改了
二、<a href="{{ route('test') }}">   
区别：可直接命名使用，不因uri改变而改变，我喜欢用
注：用route需要在route中->name()
三、<a href="{{ action('HomeController@index') }}">
区别：直接指定相关控制器，受影响最小
四、<a href="绝对路径">
区别：最容易受影响，不推荐使用

②控制器中redirect跳转使用
一、return redirect('home/test'); <=> return redirect()->to('home/test');
区别：同①一
  二、return redirect()->action('HomeController@index');
区别：同①三
  三、return redirect()->route(test'');
区别：同①二
  四、return redirect()->back(); <=> return back();
说明：返回上一页面

③各个资源路径常量
一、public_path('uploads');
说明：public文件路径
二、base_path('xx');
三、app_path('xx');
四、resource_path('xx');
//英文单词
material ->素材
subscribe ->关注
